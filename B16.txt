#include <iostream>
using namespace std;

// Function to merge two halves of the array
void merge(float arr[], int left, int mid, int right) {
    int n1 = mid - left + 1; // Size of left subarray
    int n2 = right - mid;    // Size of right subarray

    float L[n1], R[n2]; // Temporary arrays

    // Copy data to temporary arrays
    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    int i = 0, j = 0, k = left;

    // Merge back into original array in sorted order
    while (i < n1 && j < n2) {
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    // Copy remaining elements from L[] and R[] if any
    while (i < n1) {
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2) {
        arr[k] = R[j];
        j++;
        k++;
    }
}

// Merge Sort function to sort the array
void mergeSort(float arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2; // Find middle point

        // Recursively sort first and second halves
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        // Merge the sorted halves
        merge(arr, left, mid, right);
    }
}

// Function to display the top 5 scores
void displayTopFive(float arr[], int n) {
    cout << "\nTop Five Scores are:" << endl;
    for (int i = n - 1, count = 0; i >= 0 && count < 5; i--, count++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Main function
int main() {
    int n;

    // Input the number of students
    cout << "Enter the number of students: ";
    cin >> n;

    float percentages[n]; // Array to store percentages

    // Input percentages
    cout << "Enter percentages of students:" << endl;
    for (int i = 0; i < n; i++) {
        cout << "Student " << i + 1 << ": ";
        cin >> percentages[i];
    }

    // Sort the array using Merge Sort
    mergeSort(percentages, 0, n - 1);

    // Display the top five scores
    displayTopFive(percentages, n);

    return 0;
}
